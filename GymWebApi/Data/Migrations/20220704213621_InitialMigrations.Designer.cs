// <auto-generated />
using System;
using Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220704213621_InitialMigrations")]
    partial class InitialMigrations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.3");

            modelBuilder.Entity("Domain.Entities.Aluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("nome");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("phone");

                    b.HasKey("Id");

                    b.ToTable("aluno", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Exercicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("nome");

                    b.Property<int>("Repeticao")
                        .HasMaxLength(11)
                        .HasColumnType("INTEGER")
                        .HasColumnName("repeticao");

                    b.Property<int>("Series")
                        .HasMaxLength(11)
                        .HasColumnType("INTEGER")
                        .HasColumnName("series");

                    b.HasKey("Id");

                    b.ToTable("exercicio", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Instrutor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("nome");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("phone");

                    b.HasKey("Id");

                    b.ToTable("instrutor", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Matricula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("AlunoId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("SMALLDATETIME")
                        .HasColumnName("data_cadastro");

                    b.Property<int>("PagamentoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlanoId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true)
                        .HasColumnName("status");

                    b.Property<int>("TreinoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId")
                        .IsUnique();

                    b.HasIndex("PagamentoId");

                    b.HasIndex("PlanoId");

                    b.ToTable("matricula", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Pagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("tipo");

                    b.HasKey("Id");

                    b.ToTable("pagamento", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Plano", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("nome");

                    b.Property<decimal>("Valor")
                        .HasColumnType("DECIMAL")
                        .HasColumnName("valor");

                    b.HasKey("Id");

                    b.ToTable("plano", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Treino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("ExercicioId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InstrutorId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("instrutor_id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.HasIndex("InstrutorId");

                    b.ToTable("treino", (string)null);
                });

            modelBuilder.Entity("treino_exercicio", b =>
                {
                    b.Property<int>("exercicio_id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("treino_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("exercicio_id", "treino_id");

                    b.HasIndex("treino_id");

                    b.ToTable("treino_exercicio");
                });

            modelBuilder.Entity("treino_matricula", b =>
                {
                    b.Property<int>("matricula_id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("treino_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("matricula_id", "treino_id");

                    b.HasIndex("treino_id");

                    b.ToTable("treino_matricula");
                });

            modelBuilder.Entity("Domain.Entities.Matricula", b =>
                {
                    b.HasOne("Domain.Entities.Aluno", "Aluno")
                        .WithOne("Matricula")
                        .HasForeignKey("Domain.Entities.Matricula", "AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Matricula_Aluno");

                    b.HasOne("Domain.Entities.Pagamento", "Pagamento")
                        .WithMany("Matriculas")
                        .HasForeignKey("PagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Matricula_Pagamento");

                    b.HasOne("Domain.Entities.Plano", "Plano")
                        .WithMany("Matriculas")
                        .HasForeignKey("PlanoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Matricula_plano");

                    b.Navigation("Aluno");

                    b.Navigation("Pagamento");

                    b.Navigation("Plano");
                });

            modelBuilder.Entity("Domain.Entities.Treino", b =>
                {
                    b.HasOne("Domain.Entities.Instrutor", "Instrutor")
                        .WithMany("Treinos")
                        .HasForeignKey("InstrutorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Treino_Instrutor");

                    b.Navigation("Instrutor");
                });

            modelBuilder.Entity("treino_exercicio", b =>
                {
                    b.HasOne("Domain.Entities.Exercicio", null)
                        .WithMany()
                        .HasForeignKey("exercicio_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_treino_exercicio_exercicio_id");

                    b.HasOne("Domain.Entities.Treino", null)
                        .WithMany()
                        .HasForeignKey("treino_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_treino_exercicio_treino_id");
                });

            modelBuilder.Entity("treino_matricula", b =>
                {
                    b.HasOne("Domain.Entities.Matricula", null)
                        .WithMany()
                        .HasForeignKey("matricula_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_treino_matricula_matricula_id");

                    b.HasOne("Domain.Entities.Treino", null)
                        .WithMany()
                        .HasForeignKey("treino_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_treino_matricula_treino_id");
                });

            modelBuilder.Entity("Domain.Entities.Aluno", b =>
                {
                    b.Navigation("Matricula");
                });

            modelBuilder.Entity("Domain.Entities.Instrutor", b =>
                {
                    b.Navigation("Treinos");
                });

            modelBuilder.Entity("Domain.Entities.Pagamento", b =>
                {
                    b.Navigation("Matriculas");
                });

            modelBuilder.Entity("Domain.Entities.Plano", b =>
                {
                    b.Navigation("Matriculas");
                });
#pragma warning restore 612, 618
        }
    }
}
